{"id":"main.js","dependencies":[{"name":"C:\\Users\\ailee\\Desktop\\Study\\FastCampus\\js\\regexp\\package.json","includedInParent":true,"mtime":1617237348944}],"generated":{"js":"// `(빽틱) 기호로 문자 데이터를 만들면 안에 줄바꿈이 가능함\nvar str = \"\\n    010-1234-5678\\n    thesecon@gmail.com\\n    https://www.omdbapi.com/?apikey=7035c60c&s=frozen\\n    The quick brown fox jumps over the lazy dog.\\n    abbcccdddd\\n    \"; // const regexp = new RegExp('the', 'gi');  // 여기서 g에 해당하는 애들을 flag라고 부른다\n\nvar regexp = /fox/gi;\nconsole.log(str.match(regexp)); // 배열 데이터가 되는데 그 index 중 0번만 확인하면 됌\n\nconsole.log('=================================================');\nconsole.log(regexp.test(str));\nconsole.log('================================================='); // str.replace(정규식, '대체문자') => 정규식에 해당하는 문자를 대체문자로 전환\n\nconsole.log(str.replace(regexp, 'AAA')); // str = str.replace(regexp, 'AAA');\n\nvar regexp1 = /the/gi;\nconsole.log('=================================================');\nconsole.log(str.match(regexp1));\nconsole.log('=================================================');\nconsole.log(str.match(/\\.$/gi)); // 문자 데이터의 끝 부분이 . 인지 찾는 패턴\n// m옵션으로 시각적으로 보이는 각각의 줄에 있는 데이터 검색 시 m 플래그 사용\n\nconsole.log('=================================================');\nconsole.log(str.match(/\\.$/gim)); // 문자 데이터의 끝 부분이 . 인지 찾는 패턴\n\nconsole.log('=================================================');\nconsole.log(str.match(/d$/gm));\nconsole.log(str.match(/^t/gm));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"name":"str","generated":{"line":2,"column":4},"source":"main.js","original":{"line":2,"column":6}},{"generated":{"line":2,"column":7},"source":"main.js","original":{"line":2,"column":9}},{"generated":{"line":2,"column":182},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":2,"column":184},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"name":"regexp","generated":{"line":4,"column":4},"source":"main.js","original":{"line":11,"column":6}},{"generated":{"line":4,"column":10},"source":"main.js","original":{"line":11,"column":12}},{"generated":{"line":4,"column":13},"source":"main.js","original":{"line":11,"column":15}},{"generated":{"line":4,"column":20},"source":"main.js","original":{"line":11,"column":0}},{"name":"console","generated":{"line":5,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":5,"column":7},"source":"main.js","original":{"line":13,"column":7}},{"name":"log","generated":{"line":5,"column":8},"source":"main.js","original":{"line":13,"column":8}},{"generated":{"line":5,"column":11},"source":"main.js","original":{"line":13,"column":0}},{"name":"str","generated":{"line":5,"column":12},"source":"main.js","original":{"line":13,"column":12}},{"generated":{"line":5,"column":15},"source":"main.js","original":{"line":13,"column":15}},{"name":"match","generated":{"line":5,"column":16},"source":"main.js","original":{"line":13,"column":16}},{"generated":{"line":5,"column":21},"source":"main.js","original":{"line":13,"column":12}},{"name":"regexp","generated":{"line":5,"column":22},"source":"main.js","original":{"line":13,"column":22}},{"generated":{"line":5,"column":28},"source":"main.js","original":{"line":13,"column":12}},{"generated":{"line":5,"column":29},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":5,"column":32},"source":"main.js","original":{"line":13,"column":40}},{"name":"console","generated":{"line":7,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":7,"column":7},"source":"main.js","original":{"line":14,"column":7}},{"name":"log","generated":{"line":7,"column":8},"source":"main.js","original":{"line":14,"column":8}},{"generated":{"line":7,"column":11},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":7,"column":12},"source":"main.js","original":{"line":14,"column":12}},{"generated":{"line":7,"column":63},"source":"main.js","original":{"line":14,"column":0}},{"name":"console","generated":{"line":8,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":8,"column":7},"source":"main.js","original":{"line":15,"column":7}},{"name":"log","generated":{"line":8,"column":8},"source":"main.js","original":{"line":15,"column":8}},{"generated":{"line":8,"column":11},"source":"main.js","original":{"line":15,"column":0}},{"name":"regexp","generated":{"line":8,"column":12},"source":"main.js","original":{"line":15,"column":12}},{"generated":{"line":8,"column":18},"source":"main.js","original":{"line":15,"column":18}},{"name":"test","generated":{"line":8,"column":19},"source":"main.js","original":{"line":15,"column":19}},{"generated":{"line":8,"column":23},"source":"main.js","original":{"line":15,"column":12}},{"name":"str","generated":{"line":8,"column":24},"source":"main.js","original":{"line":15,"column":24}},{"generated":{"line":8,"column":27},"source":"main.js","original":{"line":15,"column":12}},{"generated":{"line":8,"column":28},"source":"main.js","original":{"line":15,"column":0}},{"name":"console","generated":{"line":9,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":9,"column":7},"source":"main.js","original":{"line":16,"column":7}},{"name":"log","generated":{"line":9,"column":8},"source":"main.js","original":{"line":16,"column":8}},{"generated":{"line":9,"column":11},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":9,"column":12},"source":"main.js","original":{"line":16,"column":12}},{"generated":{"line":9,"column":63},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":9,"column":66},"source":"main.js","original":{"line":17,"column":0}},{"name":"console","generated":{"line":11,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":11,"column":7},"source":"main.js","original":{"line":18,"column":7}},{"name":"log","generated":{"line":11,"column":8},"source":"main.js","original":{"line":18,"column":8}},{"generated":{"line":11,"column":11},"source":"main.js","original":{"line":18,"column":0}},{"name":"str","generated":{"line":11,"column":12},"source":"main.js","original":{"line":18,"column":12}},{"generated":{"line":11,"column":15},"source":"main.js","original":{"line":18,"column":15}},{"name":"replace","generated":{"line":11,"column":16},"source":"main.js","original":{"line":18,"column":16}},{"generated":{"line":11,"column":23},"source":"main.js","original":{"line":18,"column":12}},{"name":"regexp","generated":{"line":11,"column":24},"source":"main.js","original":{"line":18,"column":24}},{"generated":{"line":11,"column":30},"source":"main.js","original":{"line":18,"column":12}},{"generated":{"line":11,"column":32},"source":"main.js","original":{"line":18,"column":32}},{"generated":{"line":11,"column":37},"source":"main.js","original":{"line":18,"column":12}},{"generated":{"line":11,"column":38},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":11,"column":41},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"name":"regexp1","generated":{"line":13,"column":4},"source":"main.js","original":{"line":21,"column":6}},{"generated":{"line":13,"column":11},"source":"main.js","original":{"line":21,"column":13}},{"generated":{"line":13,"column":14},"source":"main.js","original":{"line":21,"column":16}},{"generated":{"line":13,"column":21},"source":"main.js","original":{"line":21,"column":0}},{"name":"console","generated":{"line":14,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":14,"column":7},"source":"main.js","original":{"line":22,"column":7}},{"name":"log","generated":{"line":14,"column":8},"source":"main.js","original":{"line":22,"column":8}},{"generated":{"line":14,"column":11},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":14,"column":12},"source":"main.js","original":{"line":22,"column":12}},{"generated":{"line":14,"column":63},"source":"main.js","original":{"line":22,"column":0}},{"name":"console","generated":{"line":15,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":15,"column":7},"source":"main.js","original":{"line":23,"column":7}},{"name":"log","generated":{"line":15,"column":8},"source":"main.js","original":{"line":23,"column":8}},{"generated":{"line":15,"column":11},"source":"main.js","original":{"line":23,"column":0}},{"name":"str","generated":{"line":15,"column":12},"source":"main.js","original":{"line":23,"column":12}},{"generated":{"line":15,"column":15},"source":"main.js","original":{"line":23,"column":15}},{"name":"match","generated":{"line":15,"column":16},"source":"main.js","original":{"line":23,"column":16}},{"generated":{"line":15,"column":21},"source":"main.js","original":{"line":23,"column":12}},{"name":"regexp1","generated":{"line":15,"column":22},"source":"main.js","original":{"line":23,"column":22}},{"generated":{"line":15,"column":29},"source":"main.js","original":{"line":23,"column":12}},{"generated":{"line":15,"column":30},"source":"main.js","original":{"line":23,"column":0}},{"name":"console","generated":{"line":16,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":16,"column":7},"source":"main.js","original":{"line":24,"column":7}},{"name":"log","generated":{"line":16,"column":8},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":16,"column":11},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":16,"column":12},"source":"main.js","original":{"line":24,"column":12}},{"generated":{"line":16,"column":63},"source":"main.js","original":{"line":24,"column":0}},{"name":"console","generated":{"line":17,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":17,"column":7},"source":"main.js","original":{"line":26,"column":7}},{"name":"log","generated":{"line":17,"column":8},"source":"main.js","original":{"line":26,"column":8}},{"generated":{"line":17,"column":11},"source":"main.js","original":{"line":26,"column":0}},{"name":"str","generated":{"line":17,"column":12},"source":"main.js","original":{"line":26,"column":12}},{"generated":{"line":17,"column":15},"source":"main.js","original":{"line":26,"column":15}},{"name":"match","generated":{"line":17,"column":16},"source":"main.js","original":{"line":26,"column":16}},{"generated":{"line":17,"column":21},"source":"main.js","original":{"line":26,"column":12}},{"generated":{"line":17,"column":22},"source":"main.js","original":{"line":26,"column":22}},{"generated":{"line":17,"column":29},"source":"main.js","original":{"line":26,"column":12}},{"generated":{"line":17,"column":30},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":17,"column":33},"source":"main.js","original":{"line":26,"column":40}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"name":"console","generated":{"line":20,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":20,"column":7},"source":"main.js","original":{"line":28,"column":7}},{"name":"log","generated":{"line":20,"column":8},"source":"main.js","original":{"line":28,"column":8}},{"generated":{"line":20,"column":11},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":20,"column":12},"source":"main.js","original":{"line":28,"column":12}},{"generated":{"line":20,"column":63},"source":"main.js","original":{"line":28,"column":0}},{"name":"console","generated":{"line":21,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":21,"column":7},"source":"main.js","original":{"line":29,"column":7}},{"name":"log","generated":{"line":21,"column":8},"source":"main.js","original":{"line":29,"column":8}},{"generated":{"line":21,"column":11},"source":"main.js","original":{"line":29,"column":0}},{"name":"str","generated":{"line":21,"column":12},"source":"main.js","original":{"line":29,"column":12}},{"generated":{"line":21,"column":15},"source":"main.js","original":{"line":29,"column":15}},{"name":"match","generated":{"line":21,"column":16},"source":"main.js","original":{"line":29,"column":16}},{"generated":{"line":21,"column":21},"source":"main.js","original":{"line":29,"column":12}},{"generated":{"line":21,"column":22},"source":"main.js","original":{"line":29,"column":22}},{"generated":{"line":21,"column":30},"source":"main.js","original":{"line":29,"column":12}},{"generated":{"line":21,"column":31},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":21,"column":34},"source":"main.js","original":{"line":29,"column":41}},{"name":"console","generated":{"line":23,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":23,"column":7},"source":"main.js","original":{"line":30,"column":7}},{"name":"log","generated":{"line":23,"column":8},"source":"main.js","original":{"line":30,"column":8}},{"generated":{"line":23,"column":11},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":23,"column":12},"source":"main.js","original":{"line":30,"column":12}},{"generated":{"line":23,"column":63},"source":"main.js","original":{"line":30,"column":0}},{"name":"console","generated":{"line":24,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":24,"column":7},"source":"main.js","original":{"line":32,"column":7}},{"name":"log","generated":{"line":24,"column":8},"source":"main.js","original":{"line":32,"column":8}},{"generated":{"line":24,"column":11},"source":"main.js","original":{"line":32,"column":0}},{"name":"str","generated":{"line":24,"column":12},"source":"main.js","original":{"line":33,"column":4}},{"generated":{"line":24,"column":15},"source":"main.js","original":{"line":33,"column":7}},{"name":"match","generated":{"line":24,"column":16},"source":"main.js","original":{"line":33,"column":8}},{"generated":{"line":24,"column":21},"source":"main.js","original":{"line":33,"column":4}},{"generated":{"line":24,"column":22},"source":"main.js","original":{"line":33,"column":14}},{"generated":{"line":24,"column":28},"source":"main.js","original":{"line":33,"column":4}},{"generated":{"line":24,"column":29},"source":"main.js","original":{"line":32,"column":0}},{"name":"console","generated":{"line":25,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":25,"column":7},"source":"main.js","original":{"line":35,"column":7}},{"name":"log","generated":{"line":25,"column":8},"source":"main.js","original":{"line":35,"column":8}},{"generated":{"line":25,"column":11},"source":"main.js","original":{"line":35,"column":0}},{"name":"str","generated":{"line":25,"column":12},"source":"main.js","original":{"line":36,"column":4}},{"generated":{"line":25,"column":15},"source":"main.js","original":{"line":36,"column":7}},{"name":"match","generated":{"line":25,"column":16},"source":"main.js","original":{"line":36,"column":8}},{"generated":{"line":25,"column":21},"source":"main.js","original":{"line":36,"column":4}},{"generated":{"line":25,"column":22},"source":"main.js","original":{"line":36,"column":14}},{"generated":{"line":25,"column":28},"source":"main.js","original":{"line":36,"column":4}},{"generated":{"line":25,"column":29},"source":"main.js","original":{"line":35,"column":0}}],"sources":{"main.js":"// `(빽틱) 기호로 문자 데이터를 만들면 안에 줄바꿈이 가능함\r\nconst str = `\r\n    010-1234-5678\r\n    thesecon@gmail.com\r\n    https://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\n    The quick brown fox jumps over the lazy dog.\r\n    abbcccdddd\r\n    `\r\n\r\n// const regexp = new RegExp('the', 'gi');  // 여기서 g에 해당하는 애들을 flag라고 부른다\r\nconst regexp = /fox/gi;\r\n\r\nconsole.log(str.match(regexp))          // 배열 데이터가 되는데 그 index 중 0번만 확인하면 됌\r\nconsole.log('=================================================')\r\nconsole.log(regexp.test(str));\r\nconsole.log('=================================================')\r\n// str.replace(정규식, '대체문자') => 정규식에 해당하는 문자를 대체문자로 전환\r\nconsole.log(str.replace(regexp, 'AAA'));   \r\n// str = str.replace(regexp, 'AAA');\r\n\r\nconst regexp1 = /the/gi\r\nconsole.log('=================================================')\r\nconsole.log(str.match(regexp1));\r\nconsole.log('=================================================')\r\n\r\nconsole.log(str.match(/\\.$/gi));        // 문자 데이터의 끝 부분이 . 인지 찾는 패턴\r\n// m옵션으로 시각적으로 보이는 각각의 줄에 있는 데이터 검색 시 m 플래그 사용\r\nconsole.log('=================================================')\r\nconsole.log(str.match(/\\.$/gim));        // 문자 데이터의 끝 부분이 . 인지 찾는 패턴\r\nconsole.log('=================================================')\r\n\r\nconsole.log(\r\n    str.match(/d$/gm)\r\n);\r\nconsole.log(\r\n    str.match(/^t/gm)\r\n);\r\n\r\n\r\n\r\n"},"lineCount":null}},"error":null,"hash":"c2c1c8814a9a09fea8ea24c348edc643","cacheData":{"env":{}}}